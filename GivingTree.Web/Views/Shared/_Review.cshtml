@*@model GivingTree.Data.Models.Review


<div class="form-group">
	@Html.LabelFor(model => model.StarRating, htmlAttributes: new { @class = "col col-form-label" })
	<div class="col">
		@Html.RadioButtonFor(model => model.StarRating, "1")
		@Html.RadioButtonFor(model => model.StarRating, "2")
		@Html.RadioButtonFor(model => model.StarRating, "3")
		@Html.RadioButtonFor(model => model.StarRating, "4")
		@Html.RadioButtonFor(model => model.StarRating, "5")
		@Html.ValidationMessageFor(model => model.StarRating, "", new { @class = "text-danger" })
	</div>
</div>

<div class="form-group">
	@Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "col col-form-label" })
	<div class="col">
		@Html.TextAreaFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control" } })
		@Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
	</div>
</div>

<div class="form-group">
	@Html.HiddenFor(model => model.Id)
	@Html.HiddenFor(model => model.UserId)
	@Html.HiddenFor(model => model.FruitTreeId)
	@Html.HiddenFor(model => model.TreeSku)
</div>*@


@*@model GivingTree.Data.Models.FruitTreeRating

<span title="@Model.Rating.GetValueOrDefault().ToString("N1")">
	@for (var i = 1; i <= 5; i++)
	{
		var starClass = (Model.Rating >= i) ? "star" : "star-empty";
		<span class="rating-star glyphicon glyphicon-@starClass"></span>
	}
</span>
<span>(@Model.ReviewCount)</span>*@
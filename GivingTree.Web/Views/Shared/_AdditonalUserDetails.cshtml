@using GivingTree.Data.Models
@model GivingTree.Web.Models.ExternalLoginConfirmationViewModel

<div class="form-group">
	@Html.LabelFor(m => m.UserAboutMeSection, new { @class = "col col-form-label" })
	<div class="col">
		@Html.TextAreaFor(m => m.UserAboutMeSection, new { @class = "form-control" })
		@Html.ValidationMessageFor(m => m.UserAboutMeSection)
	</div>
</div>

<div class="form-group">
	@Html.LabelFor(m => m.UserFavoriteFruit.ToString("G"), htmlAttributes: new { @class = "col col-form-label" })
	<div class="col">
		@Html.EnumDropDownListFor(m => m.UserFavoriteFruit.ToString("G"), new { htmlAttributes = new { @class = "form-control" } })
		@Html.ValidationMessageFor(m => m.UserFavoriteFruit.ToString("G"), "", new { @class = "text-danger" })
	</div>
</div>


<div class="form-group">
	@Html.LabelFor(m => m.UserSecondFavoriteFruit.ToString("G"), htmlAttributes: new { @class = "col col-form-label" })
	<div class="col">
		@Html.EnumDropDownListFor(m => m.UserSecondFavoriteFruit.ToString("G"), new { htmlAttributes = new { @class = "form-control" } })
		@*@Html.DropDownList("FruitType", EnumHelper.GetSelectList(typeof(FruitType)), "Second Favorite Fruit", new { @class = "form-control" })*@

		@Html.ValidationMessageFor(m => m.UserSecondFavoriteFruit.ToString("G"), "", new {@class = "text-danger"})
	</div>
</div>

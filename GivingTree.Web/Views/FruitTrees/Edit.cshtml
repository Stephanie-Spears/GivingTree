@using GivingTree.Data.Models
@using Microsoft.AspNet.Identity
@model GivingTree.Data.Models.FruitTree

@{
	ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm("Edit", "FruitTrees", null, FormMethod.Post, new { encytype = "multipart/from-data" }))
{
	@Html.AntiForgeryToken()

	<h4>Tree</h4>

	<hr />

	@Html.ValidationSummary(true, "", new { @class = "text-danger" })
	@Html.HiddenFor(model => model.Id)

	<div class="form-group">
		@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "col col-form-label" })
		<div class="col">
			@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
		</div>
	</div>
	<div class="form-group">
		@Html.LabelFor(model => model.Fruit, htmlAttributes: new { @class = "col col-form-label" })
		<div class="col">
			@Html.EnumDropDownListFor(model => model.Fruit, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Fruit, "", new { @class = "text-danger" })
		</div>
	</div>
	<div class="form-group">
		@Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "col col-form-label" })
		<div class="col">
			@Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
		</div>
	</div>
	<div class="form-group">
		@Html.LabelFor(model => model.Latitude, htmlAttributes: new { @class = "col col-form-label" })
		<div class="col">
			@Html.EditorFor(model => model.Latitude, new { htmlAttributes = new { @class = "form-control", id = "Latitude" } })
			@Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
		</div>
	</div>
	<div class="form-group">
		@Html.LabelFor(model => model.Longitude, htmlAttributes: new { @class = "col col-form-label"})
		<div class="col">
			@Html.EditorFor(model => model.Longitude, new { htmlAttributes = new { @class = "form-control", id = "Longitude" } })
			@Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger" })
		</div>
	</div>


	@Html.HiddenFor(model => model.CreatedByUserId, new { Value = User.Identity.GetUserId()})
	@Html.HiddenFor(model => model.CreatedByUserName, new { Value = User.Identity.GetUserName()})
	@Html.HiddenFor(model => model.LastUpdated, new { Value = DateTime.Now})


	<div class="form-group">
		<div class="col">
			@Html.Partial("_GoogleMapsBlock")
		</div>
	</div>

	
	if(Model.Files.Any(f => f.FileType == FileType.Avatar)) {
		<div class="form-group">
			<span class="col col-form-label"><strong>Current Photo</strong></span>
			<div class="col">
				<img src="~/File?id=@Model.Files.First(f => f.FileType == FileType.Avatar).FileId" alt="avatar" />
			</div>
		</div>
	}

	<div class="form-group">
		@Html.Label("Avatar", new {@class = "col col-form-label"})
		<div class="col">
			<input type="file" id="Avatar" name="upload" />
		</div>
	</div>

	<div class="form-group">
		<div class="col">
			<input type="submit" value="Save" class="btn btn-dark" />
		</div>
	</div>
}

<div class="col">
	@Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
}
@model GivingTree.Data.Models.FruitTree

@{
	ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

<div class="form-inline">
	<h4>Tree</h4>
	<hr />
	@Html.ValidationSummary(true, "", new { @class = "text-danger" })
	@Html.HiddenFor(model => model.Id)

	<div class="form-group">
		@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "col col-form-label" })
		<div class="col">
			@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.Fruit, htmlAttributes: new { @class = "col col-form-label" })
		<div class="col">
			@Html.EnumDropDownListFor(model => model.Fruit, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Fruit, "", new { @class = "text-danger" })
		</div>
	</div>


	<div class="form-group">
		@Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "col col-form-label" })
		<div class="col">
			@Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
		</div>
	</div>


	@*<div class="form-group">
			@Html.LabelFor(model => model.Location, htmlAttributes: new {@class = "col col-form-label"})
			<div class="col">
				@Html.EditorFor(model => model.Location, new {htmlAttributes = new {@class = "form-control"}})
				@Html.ValidationMessageFor(model => model.Location, "", new {@class = "text-danger"})
			</div>
		</div>*@


	<div class="form-group">
		@Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "col col-form-label" })
		<div class="col">
			@*@Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })*@
			<input type="file" name="ImageData" id="ImageData" onchange="fileCheck(this);" />
			@Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		<div class="col">
			<input type="submit" value="Save" class="btn btn-light" />
		</div>
	</div>
</div>
}

<div>
	@Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
}